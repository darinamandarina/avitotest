{"version":3,"sources":["Advertisement.js","AdvertisementsList.js","FavouriteAdverticement.js","App.js","serviceWorker.js","index.js"],"names":["Advertisement","setFavourite","favouriteProduct","JSON","stringify","_this","props","product","localStorage","setItem","id","this","react_default","a","createElement","className","lib","showThumbs","pictures","map","picture","i","src","key","title","onClick","class","build_default","rating","seller_rating","starRatedColor","numberOfStars","name","num","String","Number","isInteger","length","split","join","j","substr","replace","numPrettier","price","seller_name","React","Component","AdvertisementsList","state","selectedCategory","selectedSort","categoryOnChange","e","setState","target","value","sortOnChange","mapAdv","products","prices","filter","p","sort","b","category","src_Advertisement","_this2","elems","document","querySelectorAll","options","slider","M","FormSelect","init","getElementById","sliderValues","noUiSlider","create","start","connect","step","tooltips","range","min","max","on","values","handle","innerHTML","Object","objectSpread","react_router_dom","to","style","marginTop","position","top","onChange","FavouriteAdverticement","componentWillMount","renderFavAdv","keys","k","parse","getItem","App","sellers","Promise","all","url","fetch","then","json","data","console","log","seller","find","s","relationships","_this3","react_router","exact","path","component","AdvertisementsList_AdvertisementsList","FavouriteAdverticement_FavouriteAdverticement","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.5c225535.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\r\nimport { Carousel } from \"react-responsive-carousel\"\r\nimport \"./style.css\"\r\nimport StarRatings from \"react-star-ratings\"\r\nimport 'font-awesome/css/font-awesome.min.css'\r\n\r\nconst numPrettier = (num)=>{\r\n  if (num){ \r\n    num = String(num)\r\n    if(Number.isInteger(num.length/3)){\r\n      return num.split(/(\\d{3})/).join(\" \")\r\n    }else{\r\n      let j = num.length\r\n      j = num.length > 3 ? j % 3 : 0 \r\n      \r\n      return j ? num.substr(0, j) + \" \" : \"\" + num.substr(j).replace(/(\\d{3})(?=\\d)/g, \" \")\r\n    }\r\n  }else{\r\n    return null\r\n  }  \r\n}\r\n\r\nclass Advertisement extends React.Component{\r\n  setFavourite = () => {\r\n    let favouriteProduct = JSON.stringify(this.props.product)\r\n    localStorage.setItem(this.props.product.id, favouriteProduct)\r\n  }\r\n  render(){\r\n    const {product} = this.props\r\n    return(\r\n        <article className=\"adverisements_advertisement advertisement row\">\r\n          <div className=\"col s12\">\r\n            <div className=\"card \">\r\n              <div className=\"card-image\">\r\n                <Carousel  showThumbs={false}>{product.pictures.map((picture, i)=><img src={picture} key={i}/>)}</Carousel>\r\n                <span className=\"advertisement_title card-title\">{product.title}</span>\r\n                <button className=\"btn-floating halfway-fab waves-effect waves-light \" onClick={this.setFavourite} id={this.props.product.id} ><i className=\"fa fa-heart\"></i></button>\r\n              </div>\r\n              <div class=\"card-content\">\r\n                <StarRatings rating={product.seller_rating} starRatedColor=\"gold\" numberOfStars={5} name='rating'/>         \r\n                <div className=\"advertisement_price\">{numPrettier(product.price)}₽</div>\r\n                <div className=\"advertisement_name\">{product.seller_name}</div>\r\n              </div>\r\n            </div>           \r\n          </div>\r\n        </article>\r\n    )\r\n  }\r\n}\r\nexport default Advertisement","import React from 'react'\r\nimport Advertisement from './Advertisement';\r\nimport { Link } from 'react-router-dom'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport noUiSlider from 'materialize-css/extras/noUiSlider/nouislider.js'\r\nimport 'materialize-css/extras/noUiSlider/nouislider.css'\r\n\r\nexport default class AdvertisementsList extends React.Component {\r\n   state={\r\n       price:[0, 1000000],\r\n       selectedCategory: 'any',\r\n       selectedSort: 'price'\r\n\r\n    }\r\n    \r\n    componentDidMount(){\r\n        const elems = document.querySelectorAll('select')\r\n        const options = document.querySelectorAll('option')\r\n        let instances = M.FormSelect.init(elems, options)\r\n         \r\n        const slider = document.getElementById('priceSlider')\r\n        let sliderValues =[ \r\n            document.getElementById('lower-price'),\r\n            document.getElementById('upper-price')\r\n        ]\r\n        noUiSlider.create(slider, {\r\n            start: [0, 3000000],\r\n            connect: true,\r\n            step: 100,\r\n            tooltips: false,\r\n            range: {\r\n                'min': 0,\r\n                'max': 3000000\r\n            }\r\n        })\r\n        slider.noUiSlider.on('change', (values,handle)=>{\r\n            var prices = this.state.price\r\n            prices[handle] = values[handle]\r\n            sliderValues[handle].innerHTML = values[handle]\r\n            this.setState({...prices})\r\n\r\n        })\r\n    }\r\n\r\n    categoryOnChange = (e) => {\r\n        this.setState({selectedCategory: e.target.value})\r\n    }\r\n    sortOnChange = (e) => {\r\n        this.setState({selectedSort: e.target.value})\r\n    }\r\n    mapAdv = () => {\r\n        let {products} = this.props\r\n        let prices = this.state.price\r\n\r\n        products = products.filter(p => {\r\n            let price = p.price || ''\r\n            return price>=prices[0] && price<=prices[1]\r\n        })\r\n        if (this.state.selectedSort === 'price')\r\n            products = products.sort((a,b)=>{\r\n                if (a.price > b.price)\r\n                    return 1\r\n\r\n                if (a.price < b.price)\r\n                    return -1\r\n\r\n                return 0\r\n            })\r\n        else if (this.state.selectedSort === 'rating')\r\n        products = products.sort((a,b)=>{\r\n            if( a.seller_rating < b.seller_rating )\r\n                return 1\r\n            if ( a.seller_rating > b.seller_rating )\r\n                return -1\r\n            return 0\r\n        }) \r\n        \r\n        if (this.state.selectedCategory !== \"any\"){\r\n            products = products.filter(p=>{\r\n                let category = p.category\r\n                return category === this.state.selectedCategory\r\n            })\r\n        }\r\n\r\n        return products.map((product, key)=><Advertisement product={product} key={key}/>)\r\n   }\r\n\r\n   render(){\r\n    return <section>\r\n        <Link to='/favourite'><i className=\"fa fa-heart\"></i></Link>\r\n        <header className=\"filter row\">\r\n            <form className=\"col s12\"> \r\n            <div className=\"input-field col s12 l6\" style={{marginTop: \"3.7rem\"}}>  \r\n                <label style={{position: \"absolute\", top: \"-68px\"}}>Цена</label>\r\n                <div id=\"priceSlider\"></div> \r\n\r\n                <div className=\"col s3 l2 left-align\">\r\n                    <span id=\"lower-price\"></span>\r\n                </div>\r\n                <div className=\"col s3 l2 offset-l8 offset-s6 right-align\">\r\n                    <span id=\"upper-price\"></span> \r\n                </div> \r\n            </div> \r\n\r\n            <div className=\"input-field col l3 s12\">\r\n                <select name=\"category\" value={this.state.selectedCategory} onChange={this.categoryOnChange}>\r\n                    <option value=\"any\">любая категория</option>\r\n                    <option value=\"immovable\">недвижимость</option>\r\n                    <option value=\"cameras\">камеры</option>\r\n                    <option value=\"auto\">автомобили</option>\r\n                    <option value=\"laptops\">ноутбуки</option>\r\n                </select>\r\n                <label>Категория</label>\r\n            </div>   \r\n\r\n            <div className=\"input-field col s12 l3\">\r\n                <select name=\"sort\" value={this.state.selectedSort} onChange={this.sortOnChange}>\r\n                    <option value=\"rating\">по популярности</option>\r\n                    <option value=\"price\">по возрастанию цены</option>\r\n                </select>\r\n                <label>Сортировка</label>\r\n            </div>\r\n            </form>\r\n        </header>\r\n        <section className=\"advertisements container\">\r\n            {this.mapAdv()}\r\n        </section>\r\n    </section>\r\n   }\r\n}\r\n","import React from 'react'\r\nimport Advertisement from './Advertisement'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default class FavouriteAdverticement extends React.Component{\r\n    state = {products:[]}\r\n    componentWillMount = () => {\r\n        this.setState( { products: { ...localStorage } } )\r\n    }\r\n    renderFavAdv = () => {\r\n        return Object.keys(localStorage).map(k => <Advertisement product={JSON.parse(localStorage.getItem(k))}/>)\r\n    }\r\n    render(){\r\n        return  <div>\r\n            <Link to=\"/\"><i className=\"fa fa-home\"></i></Link>\r\n            {this.renderFavAdv()}\r\n        </div>\r\n        \r\n    }\r\n}","import React from 'react'\r\nimport './App.css'\r\nimport 'materialize-css'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport AdvertisementsList from './AdvertisementsList.js'\r\nimport FavouriteAdverticement from './FavouriteAdverticement.js'\r\nimport { Link, Route, BrowserRouter } from 'react-router-dom'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    products:[],\r\n    sellers:[]\r\n  }\r\n\r\n  componentWillMount(){\r\n    Promise.all(['https://avito.dump.academy/sellers/', 'https://avito.dump.academy/products'].map(url => fetch(url).then(j => j.json()) )) \r\n    .then(data=>{\r\n      \r\n      let sellers = data[0].data\r\n      let products = data[1].data\r\n      console.log(data)\r\n      products = products.map(p => {\r\n        let seller = sellers.find(s => s.id === p.relationships.seller) || {name: '', rating: 0}\r\n        return {...p, seller_name: seller.name, seller_rating: seller.rating}\r\n      })\r\n\r\n      this.setState({...this.state, products, sellers})\r\n\r\n    })\r\n}\r\n  render(){\r\n    const advList = () => <AdvertisementsList sellers={this.state.sellers} products={this.state.products}/>\r\n    const favAdv = () => <FavouriteAdverticement/>\r\n  return (\r\n    <div className=\"App container\">\r\n      <BrowserRouter>\r\n      <div>\r\n        <Route exact path=\"/\" component={advList}/>\r\n        <Route exact path='/favourite' component={favAdv}/>        \r\n      </div>\r\n      </BrowserRouter> \r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}